name: CI Lint & Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run unified lint/format pipeline
        run: |
          python tools/auto_lint_and_format.py

      - name: Summarize quality results
        if: always()
        run: |
          echo "## Code Quality Summary" >> $GITHUB_STEP_SUMMARY
          if ls logs/quality/ruff_results_*.txt 1> /dev/null 2>&1; then
            echo "### Ruff (last log tail)" >> $GITHUB_STEP_SUMMARY
            last_ruff=$(ls -t logs/quality/ruff_results_*.txt | head -n1)
            echo '\n```' >> $GITHUB_STEP_SUMMARY
            tail -n 40 "$last_ruff" >> $GITHUB_STEP_SUMMARY
            echo '\n```' >> $GITHUB_STEP_SUMMARY
          fi
          if ls logs/quality/pyright_results_*.txt 1> /dev/null 2>&1; then
            echo "### Pyright (last log tail)" >> $GITHUB_STEP_SUMMARY
            last_pyright=$(ls -t logs/quality/pyright_results_*.txt | head -n1)
            echo '\n```' >> $GITHUB_STEP_SUMMARY
            tail -n 40 "$last_pyright" >> $GITHUB_STEP_SUMMARY
            echo '\n```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload quality logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-logs
          path: logs/quality/

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run pytest with coverage
        run: |
          pytest --cov=src_dash --cov-report=xml --cov-report=term-missing || true
          echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage.xml ]; then
            rate=$(grep -m1 'line-rate' coverage.xml | sed -E 's/.*line-rate=\"([0-9.]+)\".*/\1/')
            echo "라인 커버리지: ${rate}" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: coverage
            path: |
              coverage.xml
              .coverage*
